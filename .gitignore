input
data
test_results
output
images
FFHQ
FFHQ_seg

# big files
*.mp4
*.npy
*.zip
*.tar
*.gz
*.7z
*.rar
*.tar.gz
*.tar.bz2
*.tar.xz
*.tar.lz
submodules/
wandb/
FLAME_PyTorch/


# images videos audios
*.jpg
*.jpeg
*.png
*.gif
*.mp3
*.wav
*.flac
*.mp4
*.avi
*.mov
*.webm
*.mkv

# data
*.csv
*.tsv
*.npy
*.xml
*.flame

# 3d data
*.obj
*.stl
*.fbx
*.3ds
*.ply
*.off
*.gltf


# data and log file
*.log
dataset/
metrical-tracker/data/
metrical-tracker/input/
metrical-tracker/output/
MICA/data/
MICA/demo/
wav2vec2-xls-r-300m-timit-phoneme/


# model and checkpoint
*.pth
*.pt
*.ckpt
*.h5
*.model
*.mdl
*.mdlh5

# 3d models
*.obj
*.stl
*.fbx
*.blend
*.3ds
*.pkl
*.pklz
*.pkl.gz
*.mtl

# temporary files
*.tmp
*.temp
*.bak
*.swp
*.swo



condor/logs
condor/jobs

.idea
.vscode

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

!input/wojtek/identity.npy
!input/wojtek/video.mp4
!input/duda/identity.npy
!input/duda/video.mp4
!input/justin/identity.npy
!input/justin/video.mp4

./original_dataset/*
./original_dataset_25fps/*